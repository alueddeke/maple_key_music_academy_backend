name: Deploy Backend Prod

on:
  push:
    branches:
      - deploy
  pull_request:
    branches:
      - deploy
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          
      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Run pre-commit hooks
        run: pre-commit run --all-files
        
      - name: Run pyright
        run: pyright

  build_and_push:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/maple-key-backend:latest
            ${{ secrets.DOCKER_USERNAME }}/maple-key-backend:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    needs: build_and_push
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    
    steps:
      - name: Deploy to VPC
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPC_HOST }}
          username: ${{ secrets.VPC_USERNAME }}
          key: ${{ secrets.VPC_SSH_KEY }}
          port: ${{ secrets.VPC_PORT || 22 }}
          script: |
            # Login to Docker Hub
            echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
            
            # Pull latest image
            docker pull ${{ secrets.DOCKER_USERNAME }}/maple-key-backend:latest
            
            # Stop and remove existing container
            docker stop maple-key-backend || true
            docker rm maple-key-backend || true
            
            # Run new container
            docker run -d \
              --name maple-key-backend \
              --restart unless-stopped \
              -p 8000:8000 \
              -e DATABASE_URL="${{ secrets.DATABASE_URL }}" \
              -e SECRET_KEY="${{ secrets.DJANGO_SECRET_KEY }}" \
              -e DEBUG="False" \
              -e ALLOWED_HOSTS="${{ secrets.ALLOWED_HOSTS }}" \
              ${{ secrets.DOCKER_USERNAME }}/maple-key-backend:latest
            
            # Clean up old images
            docker image prune -f
            
            # Verify deployment
            sleep 5
            if docker ps | grep -q maple-key-backend; then
              echo "✅ Backend deployed successfully!"
            else
              echo "❌ Deployment failed!"
              docker logs maple-key-backend
              exit 1